name: Daily Reminders with Randomized Tone

on:
  workflow_dispatch:
  schedule:
    - cron: '0 23 * * 0,1,3,4,5'
    - cron: '0 0 * * 2,6'
    - cron: '0 12 * * *'
    - cron: '45 10 * * 0,1,3,4,5'
    - cron: '30 1 * * 2,6'

jobs:
  remind:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: python3 -m pip install openai

      - name: Generate randomized reminder
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cat <<EOF > script.py
import os, json, glob, openai, random
from datetime import datetime

files = sorted(glob.glob('processed/*.json'), key=os.path.getmtime, reverse=True)
latest = files[0] if files else None

tone_type = ''
if latest:
    with open(latest, 'r', encoding='utf-8') as f:
        data = json.load(f)
    total = data.get('sleep_summary', {}).get('total_sleep', 0)
    if total >= 25200:
        tone_type = 'gentle'
    elif total >= 18000:
        tone_type = 'neutral'
    else:
        tone_type = 'concerned'

now = datetime.utcnow().strftime('%H:%M')
if now in ['23:00', '00:00', '12:00']:
    task = 'brush'
elif now in ['10:45', '01:30']:
    task = 'exercise'
else:
    task = 'unknown'

reminders = {
  "brush": {
    "gentle": ["記得刷牙"],
    "neutral": ["刷牙囉～"],
    "concerned": ["先去把牙齒處理一下"]
  },
  "exercise": {
    "gentle": ["記得簡單踩個踏步機 ✦"],
    "neutral": ["今天要踩踏步囉！"],
    "concerned": ["三分鐘也可以，慢慢來"]
  }
}

weekday = datetime.utcnow().weekday()
is_holiday = weekday in [2, 6]

if task == 'exercise' and is_holiday and tone_type == 'gentle':
    suggestion = '\\n（你今天狀況不錯，要不要考慮用一下健身環？）'
else:
    suggestion = ''

options = reminders.get(task, {}).get(tone_type, [])
if not options:
    print('⚠️ 無提醒語句可用。')
else:
    chosen = random.choice(options)
    print('\\n--- 今日提醒 ---')
    print(f'{chosen}{suggestion}')
EOF
          python3 script.py
